name: Release

on:
  push:
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0 - without v prefix)'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - run: dotnet restore
      - run: dotnet build --configuration Release --no-restore
      - run: dotnet test --no-build --configuration Release --verbosity normal

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Determine version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
            echo "Creating release for manually specified version: $VERSION"
          else
            VERSION="${GITHUB_REF#refs/tags/v}"
            echo "Creating release for tagged version: $VERSION"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT
          
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
          
      - name: Publish builds
        run: |
          # Windows x64
          dotnet publish DB2ERD/DB2ERD.csproj \
            -c Release \
            -r win-x64 \
            --self-contained true \
            -p:PublishSingleFile=true \
            -p:Version=${{ steps.version.outputs.version }} \
            -o artifacts/win-x64
            
          # Linux x64
          dotnet publish DB2ERD/DB2ERD.csproj \
            -c Release \
            -r linux-x64 \
            --self-contained true \
            -p:PublishSingleFile=true \
            -p:Version=${{ steps.version.outputs.version }} \
            -o artifacts/linux-x64
            
          # macOS x64
          dotnet publish DB2ERD/DB2ERD.csproj \
            -c Release \
            -r osx-x64 \
            --self-contained true \
            -p:PublishSingleFile=true \
            -p:Version=${{ steps.version.outputs.version }} \
            -o artifacts/osx-x64
            
      - name: Create release archives
        run: |
          cd artifacts
          zip -r DB2ERD-${{ steps.version.outputs.version }}-win-x64.zip win-x64/
          tar -czf DB2ERD-${{ steps.version.outputs.version }}-linux-x64.tar.gz linux-x64/
          tar -czf DB2ERD-${{ steps.version.outputs.version }}-osx-x64.tar.gz osx-x64/
          
      - name: Create tag (if manual dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag "${{ steps.version.outputs.tag }}"
          git push origin "${{ steps.version.outputs.tag }}"
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: Release ${{ steps.version.outputs.tag }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            artifacts/DB2ERD-${{ steps.version.outputs.version }}-win-x64.zip
            artifacts/DB2ERD-${{ steps.version.outputs.version }}-linux-x64.tar.gz
            artifacts/DB2ERD-${{ steps.version.outputs.version }}-osx-x64.tar.gz